/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package openbbscoreboard2.frames;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import openbbscoreboard2.Classes.OBBSboardConfigs;


/**
 *
 * @author Jireh Vallespin
 */
public class MainF extends javax.swing.JFrame {

    /**
     * Creates new form MainF
     */
    OBBSboardConfigs con = new OBBSboardConfigs();
    int periodMain = Integer.parseInt(con.GetProp("GPeriod"));
    String adsMain = con.GetProp("Ads");
    int teamfoulMain = Integer.parseInt(con.GetProp("TeamFoul"));
    int timeoutMain = Integer.parseInt(con.GetProp("TimeOuts"));
    String HomeNmain = "Bahay";
    String VisitorNmain = "Bisita";
    String ddMilis,ddSeconds,ddMinutes;
    int ShotclockMain = Integer.parseInt(con.GetProp("Shotclock"));
    int MinutesMain = Integer.parseInt(con.GetProp("GameMinutes"));
    int SecondsMain = Integer.parseInt(con.GetProp("GameSeconds"));
    //long MinuteMain = 0 * 60000, SecondsMain = 60 * 1000, TotalTimeRem = MinuteMain+SecondsMain, StartTime = -1;
    int Seconds,Minutes,Milis;
    DecimalFormat dFormat = new DecimalFormat("00");
    Timer SclockT, RclockT;
    boolean Bsclock = false, BmClock = false;
    

    public MainF() {
        initComponents();
        adsrunner.setText(adsMain);
        nameHome.setText(HomeNmain);
        nameVisitor.setText(VisitorNmain);
        shotClock.setText(Integer.toString(ShotclockMain));
        Seconds = SecondsMain;
        Minutes = MinutesMain;
        Milis = 0;
        ddMilis = dFormat.format(Milis);
        ddSeconds = dFormat.format(Seconds);
	ddMinutes = dFormat.format(Minutes);
        Minutelbl.setText(ddMinutes + ":" + ddSeconds);
        AnimRunner();
        
        //AnimRunner();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Minutelbl = new javax.swing.JLabel();
        BV = new javax.swing.JLabel();
        BH = new javax.swing.JLabel();
        LBL3 = new javax.swing.JLabel();
        LBL4 = new javax.swing.JLabel();
        LBL1 = new javax.swing.JLabel();
        LBL2 = new javax.swing.JLabel();
        LBL5 = new javax.swing.JLabel();
        LBL6 = new javax.swing.JLabel();
        LBL7 = new javax.swing.JLabel();
        LBL8 = new javax.swing.JLabel();
        periodC = new javax.swing.JLabel();
        shotClock = new javax.swing.JLabel();
        toV = new javax.swing.JLabel();
        toH = new javax.swing.JLabel();
        tfV = new javax.swing.JLabel();
        bonusTH = new javax.swing.JLabel();
        bonusTV = new javax.swing.JLabel();
        scoreHome = new javax.swing.JLabel();
        nameHome = new javax.swing.JLabel();
        PeriodC = new javax.swing.JLabel();
        nameVisitor = new javax.swing.JLabel();
        scoreVisitor = new javax.swing.JLabel();
        tfH = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        adsrunner = new javax.swing.JLabel();
        bg_main = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OpenBBScoreboard by JokorohPitiks");
        setMaximumSize(new java.awt.Dimension(1280, 780));
        setMinimumSize(new java.awt.Dimension(1280, 780));
        setUndecorated(true);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Minutelbl.setFont(new java.awt.Font("Score Board", 1, 125)); // NOI18N
        Minutelbl.setForeground(new java.awt.Color(255, 0, 0));
        Minutelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Minutelbl.setText("00:00");
        jPanel1.add(Minutelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 360, 150));

        BV.setBackground(new java.awt.Color(0, 0, 0));
        BV.setFont(new java.awt.Font("Score Board", 1, 70)); // NOI18N
        BV.setForeground(new java.awt.Color(163, 202, 56));
        BV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BV.setOpaque(true);
        jPanel1.add(BV, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 150, 40, 60));

        BH.setBackground(new java.awt.Color(0, 0, 0));
        BH.setFont(new java.awt.Font("Score Board", 1, 70)); // NOI18N
        BH.setForeground(new java.awt.Color(163, 202, 56));
        BH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BH.setText("<");
        BH.setOpaque(true);
        jPanel1.add(BH, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 40, 70));

        LBL3.setBackground(new java.awt.Color(5, 104, 57));
        LBL3.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL3.setForeground(new java.awt.Color(255, 255, 255));
        LBL3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL3.setText("FOUL");
        LBL3.setOpaque(true);
        jPanel1.add(LBL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 400, 150, 60));

        LBL4.setBackground(new java.awt.Color(5, 104, 57));
        LBL4.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL4.setForeground(new java.awt.Color(255, 255, 255));
        LBL4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL4.setText("TEAM");
        LBL4.setOpaque(true);
        jPanel1.add(LBL4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 350, 150, 60));

        LBL1.setBackground(new java.awt.Color(5, 104, 57));
        LBL1.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL1.setForeground(new java.awt.Color(255, 255, 255));
        LBL1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL1.setText("FOUL");
        LBL1.setOpaque(true);
        jPanel1.add(LBL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 150, 60));

        LBL2.setBackground(new java.awt.Color(5, 104, 57));
        LBL2.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL2.setForeground(new java.awt.Color(255, 255, 255));
        LBL2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL2.setText("TEAM");
        LBL2.setOpaque(true);
        jPanel1.add(LBL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 150, 60));

        LBL5.setBackground(new java.awt.Color(5, 104, 57));
        LBL5.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL5.setForeground(new java.awt.Color(255, 255, 255));
        LBL5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL5.setText("TIME");
        LBL5.setOpaque(true);
        jPanel1.add(LBL5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 150, 60));

        LBL6.setBackground(new java.awt.Color(5, 104, 57));
        LBL6.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL6.setForeground(new java.awt.Color(255, 255, 255));
        LBL6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL6.setText("OUT");
        LBL6.setOpaque(true);
        jPanel1.add(LBL6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 150, 60));

        LBL7.setBackground(new java.awt.Color(5, 104, 57));
        LBL7.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL7.setForeground(new java.awt.Color(255, 255, 255));
        LBL7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL7.setText("TIME");
        LBL7.setOpaque(true);
        jPanel1.add(LBL7, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 350, 150, 60));

        LBL8.setBackground(new java.awt.Color(5, 104, 57));
        LBL8.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        LBL8.setForeground(new java.awt.Color(255, 255, 255));
        LBL8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBL8.setText("OUT");
        LBL8.setOpaque(true);
        jPanel1.add(LBL8, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 400, 150, 60));

        periodC.setBackground(new java.awt.Color(5, 104, 57));
        periodC.setFont(new java.awt.Font("Arial Black", 2, 40)); // NOI18N
        periodC.setForeground(new java.awt.Color(255, 255, 255));
        periodC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        periodC.setText("PERIOD");
        periodC.setOpaque(true);
        jPanel1.add(periodC, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 260, 180, 40));

        shotClock.setBackground(new java.awt.Color(0, 0, 0));
        shotClock.setFont(new java.awt.Font("Score Board", 1, 200)); // NOI18N
        shotClock.setForeground(new java.awt.Color(255, 0, 0));
        shotClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shotClock.setText("24");
        shotClock.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 5, true));
        shotClock.setOpaque(true);
        jPanel1.add(shotClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, 400, 220));

        toV.setBackground(new java.awt.Color(0, 0, 0));
        toV.setFont(new java.awt.Font("Score Board", 1, 110)); // NOI18N
        toV.setForeground(new java.awt.Color(249, 165, 26));
        toV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toV.setText("0");
        toV.setOpaque(true);
        jPanel1.add(toV, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 470, 80, 140));

        toH.setBackground(new java.awt.Color(0, 0, 0));
        toH.setFont(new java.awt.Font("Score Board", 1, 110)); // NOI18N
        toH.setForeground(new java.awt.Color(249, 165, 26));
        toH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        toH.setText("0");
        toH.setOpaque(true);
        jPanel1.add(toH, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 80, 140));

        tfV.setBackground(new java.awt.Color(0, 0, 0));
        tfV.setFont(new java.awt.Font("Score Board", 1, 110)); // NOI18N
        tfV.setForeground(new java.awt.Color(249, 165, 26));
        tfV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tfV.setText("0");
        tfV.setOpaque(true);
        jPanel1.add(tfV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 470, 100, 140));

        bonusTH.setBackground(new java.awt.Color(0, 0, 0));
        bonusTH.setFont(new java.awt.Font("Score Board", 1, 48)); // NOI18N
        bonusTH.setForeground(new java.awt.Color(163, 202, 56));
        bonusTH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bonusTH.setOpaque(true);
        jPanel1.add(bonusTH, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 240, 90, 60));

        bonusTV.setBackground(new java.awt.Color(0, 0, 0));
        bonusTV.setFont(new java.awt.Font("Score Board", 1, 48)); // NOI18N
        bonusTV.setForeground(new java.awt.Color(163, 202, 56));
        bonusTV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bonusTV.setOpaque(true);
        jPanel1.add(bonusTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 240, 90, 60));

        scoreHome.setBackground(new java.awt.Color(0, 0, 0));
        scoreHome.setFont(new java.awt.Font("Score Board", 1, 120)); // NOI18N
        scoreHome.setForeground(new java.awt.Color(255, 0, 0));
        scoreHome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        scoreHome.setText("0");
        scoreHome.setOpaque(true);
        jPanel1.add(scoreHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 200, 170));

        nameHome.setBackground(new java.awt.Color(5, 104, 57));
        nameHome.setFont(new java.awt.Font("Arial Black", 2, 60)); // NOI18N
        nameHome.setForeground(new java.awt.Color(255, 255, 255));
        nameHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameHome.setText("HOME");
        nameHome.setOpaque(true);
        jPanel1.add(nameHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 400, 100));

        PeriodC.setBackground(new java.awt.Color(0, 0, 0));
        PeriodC.setFont(new java.awt.Font("Score Board", 1, 70)); // NOI18N
        PeriodC.setForeground(new java.awt.Color(255, 0, 0));
        PeriodC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PeriodC.setText("1");
        PeriodC.setOpaque(true);
        jPanel1.add(PeriodC, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 220, 60, 120));

        nameVisitor.setBackground(new java.awt.Color(5, 104, 57));
        nameVisitor.setFont(new java.awt.Font("Arial Black", 2, 60)); // NOI18N
        nameVisitor.setForeground(new java.awt.Color(255, 255, 255));
        nameVisitor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameVisitor.setText("VISITORS");
        nameVisitor.setOpaque(true);
        jPanel1.add(nameVisitor, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 22, 410, 100));

        scoreVisitor.setBackground(new java.awt.Color(0, 0, 0));
        scoreVisitor.setFont(new java.awt.Font("Score Board", 1, 120)); // NOI18N
        scoreVisitor.setForeground(new java.awt.Color(255, 0, 0));
        scoreVisitor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        scoreVisitor.setText("0");
        scoreVisitor.setOpaque(true);
        jPanel1.add(scoreVisitor, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, 200, 170));

        tfH.setBackground(new java.awt.Color(0, 0, 0));
        tfH.setFont(new java.awt.Font("Score Board", 1, 110)); // NOI18N
        tfH.setForeground(new java.awt.Color(249, 165, 26));
        tfH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tfH.setText("0");
        tfH.setOpaque(true);
        jPanel1.add(tfH, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 90, 140));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adsrunner.setBackground(new java.awt.Color(0, 0, 0));
        adsrunner.setFont(new java.awt.Font("Score Board", 2, 48)); // NOI18N
        adsrunner.setForeground(new java.awt.Color(255, 255, 51));
        adsrunner.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        adsrunner.setText("next:pito vs pita");
        adsrunner.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                adsrunnerAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel2.add(adsrunner, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1280, 70));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 1280, 90));

        bg_main.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bg_main.setIcon(new javax.swing.ImageIcon(getClass().getResource("/openbbscoreboard2/imgs/sBOARD.png"))); // NOI18N
        bg_main.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(bg_main, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1320, 720);

        jMenu1.setText("MENU");

        jMenuItem1.setText("CONFIGURATION");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Time Reset");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setText("Exit");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseClicked(evt);
            }
        });
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("ABOUT");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

        
    public void AnimRunner() {
        final int Max_x = adsrunner.getWidth();
        final int Min_x = 0;

        Thread Anim = new Thread(new Runnable() {
            @Override

            public void run() {
                int x = 20;
                int y = 0;
                boolean pos = true;
                while (true) {
                    if (pos) {
                        adsrunner.setLocation(x, y);
                        x += 5;
                    } else {
                        adsrunner.setLocation(x, y);
                        x -= 5;
                    }
                    if (x == Max_x) {
                        pos = false;
                    }
                    if (x == -720) {
                        pos = true;
                    }
                    try {
                        Thread.sleep(50);
                    } catch (Exception e) {

                    }
                }
            }
        });
        Anim.start();
    }

    public void Horn() {
        try {
            String soundName = "src\\openbbscoreboard2\\imgs\\osb.wav";
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(new File(soundName).getAbsoluteFile());
            Clip clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }

    public void THSAdd() {
        int shI = Integer.parseInt(scoreHome.getText());
        int totalshI = shI + 1;
        String total1 = Integer.toString(totalshI);
        scoreHome.setText(total1);
    }

    public void THSDed() {
        int shI = Integer.parseInt(scoreHome.getText());
        if (shI != 0) {
            int totalshI = shI - 1;
            String total1 = Integer.toString(totalshI);
            scoreHome.setText(total1);
        }
    }

    public void TVSAdd() {
        int svI = Integer.parseInt(scoreVisitor.getText());
        int totalsvI = svI + 1;
        String total2 = Integer.toString(totalsvI);
        scoreVisitor.setText(total2);
    }

    public void TVSDed() {
        int svI = Integer.parseInt(scoreVisitor.getText());
        if (svI != 0) {
            int totalsvI = svI - 1;
            String total2 = Integer.toString(totalsvI);
            scoreVisitor.setText(total2);
        }
    }

    public void PeriodCount() {
        int pcI = Integer.parseInt(PeriodC.getText());
        if (pcI != periodMain ) {
            if(BmClock == true){
            int totalpcI = pcI + 1;
            String total = Integer.toString(totalpcI);
            TimerReset();
            BmClock = false;
            PeriodC.setText(total);
            }
            
        } else {
            PeriodC.setText("1");
        }
    }

    public void THFoulAdd() {
        int tfI = Integer.parseInt(tfH.getText());
        int fin = 1 + tfI;

        if (tfI != teamfoulMain) {
            int totalsvI = tfI + 1;
            String total2 = Integer.toString(totalsvI);
            tfH.setText(total2);
            tfH.setForeground(Color.orange);
            bonusTH.setText("");
        }
        if (fin == teamfoulMain) {
            tfH.setForeground(Color.red);
            bonusTH.setText("BB");
        }
    }

    public void THFoulDed() {
        int tfI = Integer.parseInt(tfH.getText());
        if (tfI != 0) {
            int totalsvI = tfI - 1;
            String total2 = Integer.toString(totalsvI);
            tfH.setText(total2);
            tfH.setForeground(Color.orange);
            bonusTH.setText("");
        }
    }

    public void TVFoulAdd() {
        int tfI = Integer.parseInt(tfV.getText());
        int fin = 1 + tfI;

        if (tfI != teamfoulMain) {
            int totalsvI = tfI + 1;
            String total2 = Integer.toString(totalsvI);
            tfV.setText(total2);
            tfV.setForeground(Color.orange);
            bonusTV.setText("");
        }
        if (fin == teamfoulMain) {
            tfV.setForeground(Color.red);
            bonusTV.setText("BB");
        }
    }

    public void TVFoulDed() {
        int tfI = Integer.parseInt(tfV.getText());
        if (tfI != 0) {
            int totalsvI = tfI - 1;
            String total2 = Integer.toString(totalsvI);
            tfV.setText(total2);
            tfV.setForeground(Color.orange);
            bonusTV.setText("");
        }
    }

    public void THtoAdd() {
        int tfI = Integer.parseInt(toH.getText());
        int fin = 1 + tfI;

        if (tfI != timeoutMain) {
            int totalsvI = tfI + 1;
            String total2 = Integer.toString(totalsvI);
            toH.setText(total2);
            toH.setForeground(Color.orange);
        }
        if (fin == timeoutMain) {
            toH.setForeground(Color.red);
        }
    }

    public void THtoDed() {
        int tfI = Integer.parseInt(toH.getText());
        if (tfI != 0) {
            int totalsvI = tfI - 1;
            String total2 = Integer.toString(totalsvI);
            toH.setText(total2);
            toH.setForeground(Color.orange);
        }
    }

    public void TVtoAdd() {
        int tfI = Integer.parseInt(toV.getText());
        int fin = 1 + tfI;

        if (tfI != timeoutMain) {
            int totalsvI = tfI + 1;
            String total2 = Integer.toString(totalsvI);
            toV.setText(total2);
            toV.setForeground(Color.orange);
        }
        if (fin == timeoutMain) {
            toV.setForeground(Color.red);
        }
    }

    public void TVtoDed() {
        int tfI = Integer.parseInt(toV.getText());
        if (tfI != 0) {
            int totalsvI = tfI - 1;
            String total2 = Integer.toString(totalsvI);
            toV.setText(total2);
            toV.setForeground(Color.orange);
        }
    }

    public void BallPosses() {
        if (BH.getText().equals("<") && BV.getText().equals("")) {
            BH.setText("");
            BV.setText(">");
        } else if (BH.getText().equals("") && BV.getText().equals(">")) {
            BH.setText("<");
            BV.setText("");
        }
    }

    public void SclockTimer() {
        SclockT = new Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                int fin = Integer.parseInt(shotClock.getText());
                int afin = fin - 1;
                if (afin != 0) {
                    int fins = fin - 1;
                    shotClock.setText(Integer.toString(fins));
                } else {
                    int fins = fin - 1;
                    shotClock.setText(Integer.toString(fins));
                    Horn();
                    SclockT.stop();
                    RclockT.stop();
                    Bsclock = false;
                }

            }

        });
        SclockT.start();

    }

    public void RclockTimer() {
        RclockT = new Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                                Seconds--;
                                ddMilis = dFormat.format(Milis);
                                ddSeconds = dFormat.format(Seconds);
				ddMinutes = dFormat.format(Minutes);	
				Minutelbl.setText(ddMinutes + ":" + ddSeconds);

				if(Seconds==-1) {
					Seconds = 59;
					Minutes--;
                                        ddMilis = dFormat.format(Milis);
					ddSeconds = dFormat.format(Seconds);
					ddMinutes = dFormat.format(Minutes);	
					Minutelbl.setText(ddMinutes + ":" + ddSeconds);

				}
                                
				if(Minutes==0 && Seconds==0) {
                                        Horn();
					RclockT.stop();
                                        SclockT.stop();
                                        BmClock = true;
				}
            }

        });
        
        RclockT.start();
    }
    
    public void TimerReset(){
        Seconds = Integer.parseInt(con.GetProp("GameSeconds"));
        Minutes = Integer.parseInt(con.GetProp("GameMinutes"));
        Milis = 0;
        ddMilis = dFormat.format(Milis);
        ddSeconds = dFormat.format(Seconds);
	ddMinutes = dFormat.format(Minutes);
        Minutelbl.setText(ddMinutes + ":" + ddSeconds);
        shotClock.setText(Integer.toString(ShotclockMain));
        adsrunner.setText(con.GetProp("Ads"));
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        OBBSboardConf conf = new OBBSboardConf();
        conf.GetVal();
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void adsrunnerAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_adsrunnerAncestorAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_adsrunnerAncestorAdded

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 32) {
            Horn();
        }
        if (evt.getKeyCode() == 49) {
            THSAdd();
        }
        if (evt.getKeyCode() == 81) {
            THSDed();
        }
        if (evt.getKeyCode() == 51) {
            TVSAdd();
        }
        if (evt.getKeyCode() == 69) {
            TVSDed();
        }
        if (evt.getKeyCode() == 80) {
            PeriodCount();
        }
        if (evt.getKeyCode() == 65) {
            THFoulAdd();
        }
        if (evt.getKeyCode() == 90) {
            THFoulDed();
        }
        if (evt.getKeyCode() == 68) {
            TVFoulAdd();
        }
        if (evt.getKeyCode() == 67) {
            TVFoulDed();
        }
        if (evt.getKeyCode() == 83) {
            THtoAdd();
        }
        if (evt.getKeyCode() == 88) {
            THtoDed();
        }
        if (evt.getKeyCode() == 70) {
            TVtoAdd();
        }
        if (evt.getKeyCode() == 86) {
            TVtoDed();
        }
        if (evt.getKeyCode() == 85) {
            BallPosses();
        }
        if (evt.getKeyCode() == 79) {
            shotClock.setText(Integer.toString(ShotclockMain));
        }
        if (evt.getKeyCode() == 10) {
            if (Bsclock == false && BmClock == false) {
                shotClock.setText(Integer.toString(ShotclockMain));
                SclockTimer();
                RclockTimer();
                Bsclock = true;
            } 
            //if (BmClock = false) {
                
           // }
            else {
                SclockT.stop();
                RclockT.stop();
                Bsclock = false;
            }

        }
        //JOptionPane.showMessageDialog(this, evt);

    }//GEN-LAST:event_formKeyPressed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:\
        int i = JOptionPane.showConfirmDialog(this, "Are you sure you want to Exit?", "Exit??", 2,JOptionPane.WARNING_MESSAGE);
        if (i == 0) {
            System.exit(0);
        }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jMenuItem2MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        TimerReset();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BH;
    private javax.swing.JLabel BV;
    private javax.swing.JLabel LBL1;
    private javax.swing.JLabel LBL2;
    private javax.swing.JLabel LBL3;
    private javax.swing.JLabel LBL4;
    private javax.swing.JLabel LBL5;
    private javax.swing.JLabel LBL6;
    private javax.swing.JLabel LBL7;
    private javax.swing.JLabel LBL8;
    private javax.swing.JLabel Minutelbl;
    private javax.swing.JLabel PeriodC;
    private javax.swing.JLabel adsrunner;
    private javax.swing.JLabel bg_main;
    private javax.swing.JLabel bonusTH;
    private javax.swing.JLabel bonusTV;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel nameHome;
    private javax.swing.JLabel nameVisitor;
    private javax.swing.JLabel periodC;
    private javax.swing.JLabel scoreHome;
    private javax.swing.JLabel scoreVisitor;
    private javax.swing.JLabel shotClock;
    private javax.swing.JLabel tfH;
    private javax.swing.JLabel tfV;
    private javax.swing.JLabel toH;
    private javax.swing.JLabel toV;
    // End of variables declaration//GEN-END:variables
}
